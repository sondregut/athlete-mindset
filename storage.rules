rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the file
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // User profile pictures - users can only access their own
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && 
        request.resource.size < 5 * 1024 * 1024 && // Max 5MB
        request.resource.contentType.matches('image/.*');
    }
    
    // Session attachments - users can only access their own
    match /users/{userId}/sessions/{sessionId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && 
        request.resource.size < 10 * 1024 * 1024 && // Max 10MB
        (request.resource.contentType.matches('image/.*') || 
         request.resource.contentType.matches('video/.*'));
    }
    
    // User exports - users can only access their own
    match /users/{userId}/exports/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && 
        request.resource.size < 50 * 1024 * 1024; // Max 50MB for exports
    }
    
    // TTS Cache files - shared audio cache for all users
    match /tts-cache/{cacheId} {
      // Anyone can read cached audio files
      allow read: if true;
      
      // Allow authenticated users to upload new cache files
      // Limit file size to 10MB (TTS files should be much smaller)
      allow create: if request.auth != null && 
        request.resource.size < 10 * 1024 * 1024 &&
        (request.resource.contentType.matches('audio/.*') || 
         request.resource.contentType == 'application/octet-stream');
      
      // Allow updates from authenticated users (for client SDK compatibility)
      allow update: if request.auth != null && 
        request.resource.size < 10 * 1024 * 1024;
      
      // Only allow deletion by admin (for cleanup)
      allow delete: if false;
    }
    
    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}