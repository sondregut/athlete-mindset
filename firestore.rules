rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
      
      // Sessions subcollection - users can only access their own sessions
      match /sessions/{sessionId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && 
          request.resource.data.date is string;
        allow update: if isOwner(userId);
        allow delete: if isOwner(userId);
      }
      
      // Mindset preferences subcollection
      match /mindset/{mindsetId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
      
      // Allow users to read/write any subcollection under their user document
      match /{subcollection}/{document=**} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}